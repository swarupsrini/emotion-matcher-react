{"version":3,"sources":["serviceWorker.js","config/Fire.js","App.js","components/ChatList.js","components/NewChatForm.js","components/MessageList.js","components/SendMessageForm.js","components/EmojiPanel.js","components/NewEmoji.js","Home.js","Login.js","Camera.js","Analyze.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","props","state","camera_data","this","authListener","fire","auth","onAuthStateChanged","u","setState","user","console","log","history","push","className","Component","ChatList","chats","userId","currentUser","uid","database","ref","child","on","snap","once","then","usrsnap","newChat","j","val","length","i","chatting","chatKey","messageIndex","to","map","message","index","key","React","NewChatForm","handleFindNewUser","bind","cemo","emo","snapshot","inHistory","mesSnap","newKey","Object","keys","newChat1","newChat2","newHistory1","newHistory2","set","messages","onClick","type","MessageList","sender","SendMessageForm","handleChangeMessage","send","e","target","value","getMes","bfor","onChange","placeholder","EmojiPanel","NewEmoji","handleFindNewEmoji","Home","logout","speed","signOut","Login","login","handleChangeName","handleChangePassword","signup","email","password","preventDefault","signInWithEmailAndPassword","catch","error","createUserWithEmailAndPassword","id","style","marginLeft","Camera","imageData","image_name","saveImage","setRef","webcam","capture","imageSrc","getScreenshot","onClickRetake","persist","onClickSave","previousState","handleChange","name","handleSaveSubmit","pathname","img_data","audio","height","screenshotFormat","width","videoConstraints","facingMode","src","alt","Analyze","finishedState","updateDB","emID","bin","base64","replace","binary_string","atob","len","bytes","Uint8Array","charCodeAt","buffer","base64ToArrayBuffer","fetch","method","headers","body","res","json","emotionID","max","emotionObject","faceAttributes","emotion","trueEmotion","par","newAr","unshift","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a85e8be8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDW2EwK6LYmbLyZIB7BXAhrWOO95XPWUL4\",\r\n  authDomain: \"dash-1988a.firebaseapp.com\",\r\n  databaseURL: \"https://dash-1988a.firebaseio.com\",\r\n  projectId: \"dash-1988a\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"366399792444\",\r\n  appId: \"1:366399792444:web:57fde6551381ea5dfc6a39\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport fire from './config/Fire';\r\n\r\n\r\n// for now app just instantiates a camera\r\n// we want app to the controller that first prompts login,\r\n// then routes to camera then routes to the chat, etc.\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      camera_data: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.authListener();\r\n  }\r\n\r\n\r\n  authListener() {\r\n    fire.auth().onAuthStateChanged((u) => {\r\n      //console.log(user);\r\n      if (u) {\r\n        this.setState({ user: u });\r\n        //localStorage.setItem('user', user.uid);\r\n        \r\n      } else {\r\n        this.setState({ user: null });\r\n        //localStorage.removeItem('user');\r\n        console.log(\"gologin\")\r\n        this.props.history.push(\"/Login\");\r\n        return;\r\n      }\r\n      this.props.history.push(\"/Home\");\r\n      \r\n      //{this.state.user ? (<Home/>) : (<Login/>)}\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        splash\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport fire from '../config/Fire'\r\nimport '../css/ChatList.css'\r\n\r\n\r\nclass ChatList extends React.Component {\r\n\r\n\tconstructor(props){\r\n    super(props);\r\n    \r\n    this.state = {\r\n      chats: [],\r\n    }\r\n  }\r\n\r\n\tcomponentDidMount(){\r\n\t\tvar userId = fire.auth().currentUser.uid;\r\n\t\t\r\n\r\n\t\tfire.database().ref().child('chats').on('value',snap => {\r\n\t\t\tfire.database().ref('/users/' + userId).once('value').then(usrsnap => {\r\n\t\t\t\tvar newChat = []\r\n\t\t\t\tfor(var j = 0; j < snap.val().length; j++){\r\n\t\t\t\t\tfor (var i = 0; i < usrsnap.val().chatting.length; i++) {\r\n\t\t\t\t\t\tif(usrsnap.val().chatting[i].chatKey === j){\r\n\t\t\t\t\t\t\tnewChat.push({messageIndex: j, user: usrsnap.val().chatting[i].to});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tchats : newChat,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trender () {\t\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"rooms-list\">\r\n\t\t\t\t<div className=\"help-text\">ChatList</div>\r\n\t\t\t\t{this.state.chats.map((message, index) => {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={index} className=\"message\">\r\n\t\t\t\t\t\t\t<div className=\"message-username\">{message.user}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\r\n          \r\n        })}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default ChatList","import React from 'react'\r\nimport fire from '../config/Fire'\r\n\r\nclass NewChatForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFindNewUser = this.handleFindNewUser.bind();\r\n  }\r\n\r\n\r\n  handleFindNewUser() {\r\n    var userId = fire.auth().currentUser.uid;\r\n\r\n    var cemo;\r\n    fire.database().ref('/users/' + userId).once('value').then(snap => {\r\n      console.log(snap.val());\r\n      cemo = snap.val().emo[0];\r\n      fire.database().ref().child('users').once('value').then(snapshot => {\r\n        for (var key in snapshot.val()) {\r\n          var inHistory = false;\r\n          for (var i = 0; i < snap.val().history.length; i++) {\r\n            if (snap.val().history[i] === key) {\r\n              inHistory = true;\r\n            }\r\n          }\r\n          if(snapshot.val()[key].emo[0] === cemo && key !== userId && !inHistory){\r\n            // eslint-disable-next-line\r\n            fire.database().ref('/chats/').once('value').then(mesSnap => {\r\n              var newKey = Object.keys(mesSnap.val()).length;\r\n              var newChat1 = snap.val().chatting;\r\n              newChat1.push({chatKey: newKey, to: key});\r\n              var newChat2 = snapshot.val()[key].chatting;\r\n              newChat2.push({chatKey: newKey, to: userId});\r\n\r\n              var newHistory1 = snap.val().history;\r\n              newHistory1.push(key);\r\n              var newHistory2 = snapshot.val()[key].history;\r\n              newHistory2.push(userId);\r\n              fire.database().ref('users/' + userId).set({\r\n                history: newHistory1,\r\n                emo: snap.val().emo,\r\n                chatting: newChat1,\r\n              });\r\n              fire.database().ref('users/' + key).set({\r\n                history: newHistory2,\r\n                emo: snapshot.val()[key].emo,\r\n                chatting: newChat2,\r\n              });\r\n              fire.database().ref('chats/' + newKey).set({\r\n                messages: [-1]\r\n              })\r\n            });\r\n            return;\r\n          }\r\n        }\r\n        console.log(\"nothing found\");\r\n      });\r\n    });\r\n    \r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"new-room-form\">\r\n        <form>\r\n          <button onClick={this.handleFindNewUser} type=\"button\">+chat</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewChatForm","import React from 'react'\r\nimport fire from '../config/Fire'\r\n\r\nclass MessageList extends React.Component {\r\n\r\n\tconstructor(props){\r\n    super(props);\r\n    \r\n    this.state = {\r\n      chats: [],\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount(){\r\n    var userId = fire.auth().currentUser.uid;\r\n    \r\n    fire.database().ref('/users/' + userId).once('value').then(usrsnap => {\r\n      if(usrsnap.val().chatting.length - 1 !== 0){\r\n        \r\n        // console.log(usrsnap.val().chatting[(usrsnap.val().chatting.length -1)]);\r\n        fire.database().ref('chats/' + usrsnap.val().chatting[(usrsnap.val().chatting.length -1)].chatKey).on('value',snap => {\r\n\r\n          this.setState({\r\n            chats : snap.val().messages,\r\n          });\r\n        });\r\n      }\r\n      \r\n    });\r\n    \r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"message-list\">\r\n        {this.state.chats.map((message, index) => {\r\n          return (\r\n            <div key={index} className=\"message\">\r\n              <div className=\"message-username\">{message.sender}</div>\r\n              <div className=\"message-text\">{message.message}</div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MessageList","\r\nimport React from 'react'\r\nimport fire from '../config/Fire'\r\nimport '../css/SendMessageForm.css'\r\n\r\nclass SendMessageForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleChangeMessage = this.handleChangeMessage.bind(this);\r\n\t\tthis.send = this.send.bind(this);\r\n    this.state = {\r\n\t\t\tmessage: \"\"\r\n    };\r\n\t}\r\n\r\n\thandleChangeMessage(e) {\r\n    this.setState({message : e.target.value });\r\n\t}\r\n\r\n\tsend(e) {\r\n\t\tvar userId = fire.auth().currentUser.uid;\r\n    fire.database().ref('/users/' + userId).once('value').then(usrsnap => {\r\n      if(usrsnap.val().chatting.length - 1 !== 0){\r\n\t\t\t\tconsole.log(usrsnap.val().chatting[(usrsnap.val().chatting.length - 1)].chatKey);\r\n\r\n        fire.database().ref('chats/' + usrsnap.val().chatting[(usrsnap.val().chatting.length -1)].chatKey).once('value').then(getMes=>{\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar bfor = getMes.val().messages;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbfor.push({message: this.state.message, sender: userId});\r\n\t\t\t\t\tfire.database().ref('chats/' + usrsnap.val().chatting[(usrsnap.val().chatting.length -1)].chatKey).set({\r\n\t\t\t\t\t\tmessages: bfor,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.setState({message : \"\"})\r\n\t\t\t\t});\r\n        \r\n      }\r\n      \r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form >\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>send: </label>\r\n\t\t\t\t\t<input value={this.state.message} onChange={this.handleChangeMessage} className=\"message\" placeholder=\"message\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type=\"button\" onClick={this.send} className=\"btn btn-primary\">send</button>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react';\r\nimport fire from '../config/Fire'\r\n\r\n\r\n\r\nclass EmojiPanel extends React.Component {\r\n\r\n\tconstructor(props){\r\n    super(props);\r\n    \r\n    this.state = {\r\n      chats: [],\r\n    }\r\n  }\r\n\r\n\tcomponentDidMount(){\r\n\t\tvar userId = fire.auth().currentUser.uid;\r\n\t\t\r\n\r\n\t\tfire.database().ref('/users/' + userId + '/emo').on('value',snap => {\r\n      \r\n      \r\n      this.setState({\r\n        chats : snap.val(),\r\n      });\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\trender () {\t\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"message-list\">\r\n        \r\n\t\t\t\t<div className=\"room\">past emotion</div>\r\n\t\t\t\t{this.state.chats.map((message, index) => {\r\n\t\t\t\t\tif(message !== -1){\r\n            return (\r\n              <div key={index} className=\"room\">\r\n                <div className=\"message-username\">{message}</div>\r\n              </div>\r\n            )\r\n          }\r\n          return (\r\n            <div key={index} className=\"room\">\r\n              <div className=\"message-username\"></div>\r\n            </div>\r\n          );\r\n          \r\n        })}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default EmojiPanel","import React from 'react'\r\nimport fire from '../config/Fire'\r\n\r\nclass NewEmoji extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFindNewEmoji = this.handleFindNewEmoji.bind(this);\r\n  }\r\n\r\n\r\n  handleFindNewEmoji() {\r\n    // jump to Camera\r\n    console.log(\"test\");\r\n    this.props.history.push(\"./Camera\");\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"new-room-form\">\r\n        <form>\r\n          <button onClick={this.handleFindNewEmoji} type=\"button\">+emote</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NewEmoji","import React, { Component } from 'react';\r\nimport fire from './config/Fire'\r\nimport ChatList from './components/ChatList'\r\nimport NewChatform from './components/NewChatForm'\r\nimport MessageList from './components/MessageList'\r\nimport SendMessageForm from './components/SendMessageForm'\r\nimport EmojiPanel from './components/EmojiPanel'\r\nimport NewEmoji from './components/NewEmoji'\r\nimport \"./Home.css\"\r\n\r\nclass Home extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.logout = this.logout.bind(this);\r\n    this.state = {\r\n      user: props.user,\r\n      speed: 10,\r\n    }\r\n    //if (this.props.location.state != null && this.props.location.state.updateDB) { this.updateDB() };\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    // fire.database().ref().child('speed').on('value',snap => {\r\n    //   console.log(\"value: \"+ snap.val());\r\n    //   this.setState({\r\n    //     speed: snap.val()\r\n    //   });\r\n    // });\r\n  }  \r\n\r\n  logout() {\r\n    fire.auth().signOut();\r\n    this.props.history.push(\"/Login\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">  \r\n        <div>\r\n        <ChatList {...this.props} />\r\n          <NewChatform {...this.props} />\r\n        \r\n        </div>\r\n        <div>\r\n          <MessageList {...this.props} />\r\n            <SendMessageForm {...this.props} />\r\n        </div>\r\n        <div>\r\n          <EmojiPanel {...this.props} />\r\n          <NewEmoji {...this.props} />\r\n        <button onClick={this.logout}>Logout</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport fire from './config/Fire';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangePassword = this.handleChangePassword.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  handleChangeName(e) {\r\n    this.setState({email : e.target.value });\r\n  }\r\n\r\n  handleChangePassword(e) {\r\n    \r\n    this.setState({password : e.target.value });\r\n  }\r\n\r\n  login(e) {\r\n    e.preventDefault();\r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n      console.log(u);\r\n      this.props.history.push(\"/Home\");\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n    \r\n  }\r\n\r\n  signup(e){\r\n    e.preventDefault();\r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\r\n      console.log(u);\r\n      \r\n      fire.database().ref('users/' + u.user.uid).set({\r\n        emo: [-1],\r\n        chatting: [-1],\r\n        history: [-1],\r\n      });\r\n      this.props.history.push(\"/Home\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <div>\r\n            <label >Email address</label>\r\n            <input value={this.state.email} onChange={this.handleChangeName} type=\"email\" className=\"email\" id=\"exampleInputEmail1\" placeholder=\"Enter email\" />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input value={this.state.password} onChange={this.handleChangePassword} type=\"password\" className=\"password\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n          </div>\r\n          <button type=\"button\" onClick={this.login} className=\"btn btn-primary\">Login</button>\r\n          <button type=\"button\" onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Signup</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport { connect } from 'react-redux';\r\n//import { saveJobImage } from '../actions'\r\n\r\nclass Camera extends React.Component {\r\n  state = { // store base 64 encoded image value to imageData\r\n    imageData: null,\r\n    image_name: \"\",\r\n    saveImage: false\r\n  }\r\n\r\n  setRef = (webcam) => { // activate webcam\r\n    this.webcam = webcam;\r\n  }\r\n\r\n  capture = () => { // capture the image\r\n    const imageSrc = this.webcam.getScreenshot();\r\n    this.setState({\r\n      imageData: imageSrc\r\n    })\r\n  };\r\n\r\n  onClickRetake = (e) => { // retake if not satisfied\r\n    e.persist();\r\n    this.setState({\r\n      imageData: null\r\n    })\r\n  }\r\n\r\n  onClickSave = (e) => { // change the saveImage state so we can turn off webcam after picture with a conditional statement\r\n    e.persist();\r\n    this.setState((previousState) => {\r\n      return {\r\n        saveImage: !previousState.saveImage\r\n      }\r\n    });\r\n  }\r\n\r\n  handleChange = (e) => { // user to input filename if wanna use the form\r\n    e.persist();\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSaveSubmit = (e) => {\r\n    // var img = document.createElement(\"img\");\r\n    // img.setAttribute(\"src\", this.state.imageData);\r\n    // document.body.appendChild(img);\r\n\r\n    this.props.history.push({\r\n      pathname: \"/analyze\",\r\n      state: { img_data: this.state.imageData }\r\n    });\r\n\r\n    // e.preventDefault();\r\n    // let imageObject = {\r\n    //   image_name: this.state.image_name,\r\n    //   job_id: this.props.job.id,\r\n    //   image_data: this.state.imageData\r\n    // }\r\n    // this.props.saveJobImage(imageObject)\r\n  }\r\n\r\n  // saveForm = () => {\r\n  //   return (\r\n  //     <div>\r\n  //       <form onSubmit={this.handleSaveSubmit}>\r\n  //         <p>\r\n  //           <label>Image name: </label>\r\n  //           <input type=\"text\"\r\n  //             name=\"image_name\"\r\n  //             value={this.state.image_name}\r\n  //             onChange={this.handleChange} />\r\n  //             <input type=\"submit\" value=\"Save\" />\r\n  //         </p>\r\n  //       </form>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n\r\n  render() {\r\n    const VideoConstraints = {\r\n      width: 4096, //1280,\r\n      height: 4096, // 720,\r\n      facingMode: 'user',\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Webcam // this component takes in parameters to adjust height, width, format\r\n          audio={false}\r\n          height={500}\r\n          ref={this.setRef}\r\n          screenshotFormat=\"image/png\"\r\n          width={500}\r\n          videoConstraints={VideoConstraints} // stores saved image parameters and which camera to use\r\n        />\r\n        <div className=\"button-container\"><button onClick={this.capture}>Capture photo</button></div>\r\n        {this.state.imageData ?\r\n          <div>\r\n            <p><img src={this.state.imageData} alt=\"\" /></p>\r\n            <span><button onClick={this.onClickRetake}>Retake?</button></span>\r\n            <span><button onClick={this.onClickSave}>Save</button></span>\r\n            { /* this.state.saveImage ? this.saveForm() : null */}\r\n            {this.state.saveImage ? this.handleSaveSubmit() : null}\r\n          </div>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Camera;\r\n\r\n// import React, { Component } from 'react';\r\n// import { CameraFeed } from './CameraFeed';\r\n\r\n// class Camera extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       camera_data: null,\r\n//     }\r\n//   }\r\n\r\n//   handleImage = (file) => {\r\n\r\n//     var img = document.createElement(\"img\");\r\n//     img.setAttribute(\"src\", window.URL.createObjectURL(file));\r\n//     document.body.appendChild(img);\r\n\r\n//     //console.log(file);\r\n//     //arrayBuf = \r\n//     // this.props.history.push({\r\n//     //   pathname: \"/analyze\",\r\n//     //   state: { img_data: file }\r\n//     // });\r\n//   }\r\n\r\n//   render() {\r\n//     return(\r\n//       <div className=\"Camera\">\r\n//         <h1>test</h1>\r\n//         <CameraFeed sendFile={this.handleImage} />\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Camera;","import React, { Component } from 'react';\r\nimport fire from './config/Fire'\r\n\r\nfunction dataURItoBlob(dataURI) {\r\n  // convert base64/URLEncoded data component to raw binary data held in a string\r\n  var byteString;\r\n  if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n    byteString = atob(dataURI.split(',')[1]);\r\n  else\r\n    byteString = unescape(dataURI.split(',')[1]);\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to a typed array\r\n  var ia = new Uint8Array(byteString.length);\r\n  for (var i = 0; i < byteString.length; i++) {\r\n    ia[i] = byteString.charCodeAt(i);\r\n  }\r\n\r\n  return new Blob([ia], { type: mimeString });\r\n}\r\n\r\nfunction base64ToArrayBuffer(base64) {\r\n  console.log(base64);\r\n  base64 = base64.replace(/^data:image\\/[a-z]+;base64,/, \"\");\r\n  var binary_string =  window.atob(base64);\r\n  var len = binary_string.length;\r\n  var bytes = new Uint8Array( len );\r\n  for (var i = 0; i < len; i++)        {\r\n      bytes[i] = binary_string.charCodeAt(i);\r\n  }\r\n  return bytes.buffer;\r\n}\r\n\r\n\r\nclass Analyze extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emID: null\r\n    };\r\n\r\n    var imgData = this.props.location.state.img_data;\r\n    //console.log(imgData);\r\n\r\n    //var blob = dataURItoBlob(imgData);\r\n    //console.log(blob)\r\n\r\n    var bin = base64ToArrayBuffer(imgData);\r\n    console.log(bin);\r\n\r\n    var result = fetch(\"https://faceanalysisstuff.cognitiveservices.azure.com/face/v1.0/detect?returnFaceAttributes=emotion\", {\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-Type': 'application/octet-stream',\r\n        'Ocp-Apim-Subscription-Key': '67ef477d985b4a27b8b8396ef9370a01'\r\n      },\r\n      body: bin,\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => { \r\n        console.log(res);\r\n        var max = 0;\r\n        var emotionObject = res[0].faceAttributes.emotion;\r\n        for (var emotion in emotionObject){\r\n          if (emotionObject[emotion] > max) {\r\n            console.log(emotionObject[emotion]);\r\n            var trueEmotion = emotion;\r\n            max = emotionObject[emotion];\r\n          }\r\n        }\r\n        var emotionID\r\n        if (trueEmotion == \"anger\") emotionID = 0;\r\n        if (trueEmotion == \"contempt\") emotionID = 0;\r\n        if (trueEmotion == \"disgust\") emotionID = 0;\r\n        if (trueEmotion == \"fear\") emotionID = 1;\r\n        if (trueEmotion == \"happiness\") emotionID = 2;\r\n        if (trueEmotion == \"neutral\") emotionID = 3;\r\n        if (trueEmotion == \"sadness\") emotionID = 1;\r\n        if (trueEmotion == \"surprise\") emotionID = 2;\r\n        this.setState({\r\n          emID: emotionID\r\n        }, this.finishedState);\r\n        this.updateDB(trueEmotion);\r\n      });\r\n  }\r\n\r\n  finishedState = (e) => {\r\n    this.props.history.push({\r\n      pathname: \"/Home\",\r\n      state: {updateDB: true}\r\n    });\r\n  }\r\n\r\n  updateDB(par){\r\n    var userId = fire.auth().currentUser.uid;\r\n    fire.database().ref('/users/' + userId).once('value').then(snap => {\r\n        var newAr = snap.val().emo;\r\n        newAr.unshift(par);\r\n        fire.database().ref('users/' + userId).set({\r\n          emo: newAr,\r\n          chatting: snap.val().chatting,\r\n          history: snap.val().history,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Analyze\">\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Analyze;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Camera from './Camera';\r\nimport Analyze from './Analyze';\r\n\r\n\r\nReactDOM.render(<BrowserRouter>\r\n  <Switch>\r\n    <Route exact path=\"/\" component={App} />\r\n    <Route path=\"/Home\" component={Home} />\r\n    <Route path=\"/Login\" component={Login} />\r\n    <Route path=\"/Camera\" component={Camera} />\r\n    <Route path=\"/Analyze\" component={Analyze} />\r\n  </Switch>\r\n</BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}